/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface BettingV1Interface extends utils.Interface {
  functions: {
    "createMatch(uint256,string,uint8,uint8,uint8,uint256)": FunctionFragment;
    "placeBet(uint256,uint256,uint8)": FunctionFragment;
    "results(uint256,uint8)": FunctionFragment;
    "startMatch(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "createMatch"
      | "placeBet"
      | "results"
      | "startMatch"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createMatch",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "placeBet",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "results",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "startMatch",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "createMatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "placeBet", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "results", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "startMatch", data: BytesLike): Result;

  events: {
    "MatchCreated(address,uint256,string,uint8,uint8,uint8,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MatchCreated"): EventFragment;
}

export interface MatchCreatedEventObject {
  creator: string;
  matchID: BigNumber;
  matchLink: string;
  oddsA: number;
  oddsB: number;
  oddsDraw: number;
  startAt: BigNumber;
}
export type MatchCreatedEvent = TypedEvent<
  [string, BigNumber, string, number, number, number, BigNumber],
  MatchCreatedEventObject
>;

export type MatchCreatedEventFilter = TypedEventFilter<MatchCreatedEvent>;

export interface BettingV1 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BettingV1Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      _matchLink: PromiseOrValue<string>,
      _oddsA: PromiseOrValue<BigNumberish>,
      _oddsB: PromiseOrValue<BigNumberish>,
      _oddsDraw: PromiseOrValue<BigNumberish>,
      _startAt: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    placeBet(
      _matchID: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _resultBetOn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    results(
      _matchID: PromiseOrValue<BigNumberish>,
      _results: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    startMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  createMatch(
    _matchID: PromiseOrValue<BigNumberish>,
    _matchLink: PromiseOrValue<string>,
    _oddsA: PromiseOrValue<BigNumberish>,
    _oddsB: PromiseOrValue<BigNumberish>,
    _oddsDraw: PromiseOrValue<BigNumberish>,
    _startAt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  placeBet(
    _matchID: PromiseOrValue<BigNumberish>,
    _amount: PromiseOrValue<BigNumberish>,
    _resultBetOn: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  results(
    _matchID: PromiseOrValue<BigNumberish>,
    _results: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  startMatch(
    _matchID: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    createMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      _matchLink: PromiseOrValue<string>,
      _oddsA: PromiseOrValue<BigNumberish>,
      _oddsB: PromiseOrValue<BigNumberish>,
      _oddsDraw: PromiseOrValue<BigNumberish>,
      _startAt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    placeBet(
      _matchID: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _resultBetOn: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    results(
      _matchID: PromiseOrValue<BigNumberish>,
      _results: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    startMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "MatchCreated(address,uint256,string,uint8,uint8,uint8,uint256)"(
      creator?: PromiseOrValue<string> | null,
      matchID?: null,
      matchLink?: null,
      oddsA?: null,
      oddsB?: null,
      oddsDraw?: null,
      startAt?: null
    ): MatchCreatedEventFilter;
    MatchCreated(
      creator?: PromiseOrValue<string> | null,
      matchID?: null,
      matchLink?: null,
      oddsA?: null,
      oddsB?: null,
      oddsDraw?: null,
      startAt?: null
    ): MatchCreatedEventFilter;
  };

  estimateGas: {
    createMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      _matchLink: PromiseOrValue<string>,
      _oddsA: PromiseOrValue<BigNumberish>,
      _oddsB: PromiseOrValue<BigNumberish>,
      _oddsDraw: PromiseOrValue<BigNumberish>,
      _startAt: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    placeBet(
      _matchID: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _resultBetOn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    results(
      _matchID: PromiseOrValue<BigNumberish>,
      _results: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    startMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      _matchLink: PromiseOrValue<string>,
      _oddsA: PromiseOrValue<BigNumberish>,
      _oddsB: PromiseOrValue<BigNumberish>,
      _oddsDraw: PromiseOrValue<BigNumberish>,
      _startAt: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    placeBet(
      _matchID: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _resultBetOn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    results(
      _matchID: PromiseOrValue<BigNumberish>,
      _results: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    startMatch(
      _matchID: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
